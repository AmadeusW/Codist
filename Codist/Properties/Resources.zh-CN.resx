<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CMD_FindMembers" xml:space="preserve">
    <value>查找成员...</value>
  </data>
  <data name="CMD_Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="CMD_CopyQualifiedSymbolName" xml:space="preserve">
    <value>复制类和符号名称</value>
  </data>
  <data name="CMD_CopySymbolName" xml:space="preserve">
    <value>复制符号名称</value>
  </data>
  <data name="CMD_FindAllReferences" xml:space="preserve">
    <value>查找所有引用</value>
  </data>
  <data name="CMD_FindCallers" xml:space="preserve">
    <value>查找调用方...</value>
  </data>
  <data name="CMD_FindConstructorCallers" xml:space="preserve">
    <value>查找构造函数调用方...</value>
  </data>
  <data name="CMD_FindDerivedClasses" xml:space="preserve">
    <value>查找继承的类...</value>
  </data>
  <data name="CMD_FindExtensions" xml:space="preserve">
    <value>查找扩展方法...</value>
  </data>
  <data name="CMD_FindExtensionsFor" xml:space="preserve">
    <value>查找 &lt;TYPE&gt; 的扩展方法...</value>
  </data>
  <data name="CMD_FindImplementations" xml:space="preserve">
    <value>查找接口实现...</value>
  </data>
  <data name="CMD_FindInstanceAsParameter" xml:space="preserve">
    <value>查找以实例为参数的方法...</value>
  </data>
  <data name="CMD_FindInstanceProducer" xml:space="preserve">
    <value>查找生成实例的成员...</value>
  </data>
  <data name="CMD_FindMembersOf" xml:space="preserve">
    <value>查找 &lt;TYPE&gt; 的成员...</value>
  </data>
  <data name="CMD_FindMethodsSameSignature" xml:space="preserve">
    <value>查找具有相同签名的方法...</value>
  </data>
  <data name="CMD_FindOverrides" xml:space="preserve">
    <value>查找重载方法...</value>
  </data>
  <data name="CMD_FindReferencedSymbols" xml:space="preserve">
    <value>查找引用的符号...</value>
  </data>
  <data name="CMD_FindReferrers" xml:space="preserve">
    <value>查找引用...</value>
  </data>
  <data name="CMD_FindSymbolwithName" xml:space="preserve">
    <value>查找名称带有 &lt;NAME&gt; 的符号...</value>
  </data>
  <data name="CMD_FindTypeReferrers" xml:space="preserve">
    <value>查找类型引用...</value>
  </data>
  <data name="CMD_GoTo" xml:space="preserve">
    <value>转到 &lt;TYPE&gt;</value>
  </data>
  <data name="CMD_GoToDefinition" xml:space="preserve">
    <value>转到定义</value>
  </data>
  <data name="CMD_GotoMember" xml:space="preserve">
    <value>转到成员</value>
  </data>
  <data name="CMD_GotoSymbol" xml:space="preserve">
    <value>转到符号</value>
  </data>
  <data name="CMD_GotoType" xml:space="preserve">
    <value>转到类型</value>
  </data>
  <data name="CMD_Pin" xml:space="preserve">
    <value>固定</value>
  </data>
  <data name="CMD_SelectCode" xml:space="preserve">
    <value>选择代码</value>
  </data>
  <data name="CMD_AddParallelWatch" xml:space="preserve">
    <value>添加并行监视</value>
  </data>
  <data name="CMD_AddWatch" xml:space="preserve">
    <value>添加监视</value>
  </data>
  <data name="CMD_AnalyzeSymbol" xml:space="preserve">
    <value>分析...</value>
  </data>
  <data name="CMD_Capitalize" xml:space="preserve">
    <value>首字母大写</value>
  </data>
  <data name="CMD_ClearFilter" xml:space="preserve">
    <value>清除筛选条件</value>
  </data>
  <data name="CMD_CommentSelection" xml:space="preserve">
    <value>注释选中内容
右键：注释整行</value>
  </data>
  <data name="CMD_CopySelectedText" xml:space="preserve">
    <value>复制选中文本
右键：复制整行</value>
  </data>
  <data name="CMD_CutSelectedText" xml:space="preserve">
    <value>剪切选中文本
右键：剪切整行</value>
  </data>
  <data name="CMD_Debugger" xml:space="preserve">
    <value>调试器...
左键：切换断点
右键：调试器菜单...</value>
  </data>
  <data name="CMD_DeleteAllBreakpoints" xml:space="preserve">
    <value>删除所有断点</value>
  </data>
  <data name="CMD_DeleteSelectedText" xml:space="preserve">
    <value>删除选中文本
右键：删除整行
Ctrl单击：删除并选中下一项</value>
  </data>
  <data name="CMD_DuplicateSelection" xml:space="preserve">
    <value>重复选中内容
右键：重复整行</value>
  </data>
  <data name="CMD_ExtractInterface" xml:space="preserve">
    <value>提取接口</value>
  </data>
  <data name="CMD_ExtractMethod" xml:space="preserve">
    <value>提取方法</value>
  </data>
  <data name="CMD_Find" xml:space="preserve">
    <value>查找...</value>
  </data>
  <data name="CMD_FindInFiles" xml:space="preserve">
    <value>在文件中查找...</value>
  </data>
  <data name="CMD_FindReplace" xml:space="preserve">
    <value>查找下一个选中文本
Ctrl 单击：匹配大小写查找
右键：查找及替换...</value>
  </data>
  <data name="CMD_FormatDocument" xml:space="preserve">
    <value>格式化文档</value>
  </data>
  <data name="CMD_FormatSelection" xml:space="preserve">
    <value>格式化选中内容</value>
  </data>
  <data name="CMD_Formatting" xml:space="preserve">
    <value>文本格式...</value>
  </data>
  <data name="CMD_GoToDeclaration" xml:space="preserve">
    <value>转到声明</value>
  </data>
  <data name="CMD_GoToDefinitionPeek" xml:space="preserve">
    <value>转到定义
右键：查看定义</value>
  </data>
  <data name="CMD_GUID" xml:space="preserve">
    <value>生成新的 GUID
提示：要创建一个新的 GUID，输入并选中“guid”（不带引号），然后执行本命令</value>
  </data>
  <data name="CMD_Highlight" xml:space="preserve">
    <value>突出标记</value>
  </data>
  <data name="CMD_IncrementNumber" xml:space="preserve">
    <value>数值加一</value>
  </data>
  <data name="CMD_Indent" xml:space="preserve">
    <value>缩进</value>
  </data>
  <data name="CMD_InsertComment" xml:space="preserve">
    <value>插入注释</value>
  </data>
  <data name="CMD_InvertOperator" xml:space="preserve">
    <value>反转操作符</value>
  </data>
  <data name="CMD_JoinLines" xml:space="preserve">
    <value>连接选中的行</value>
  </data>
  <data name="CMD_Lowercase" xml:space="preserve">
    <value>转为小写</value>
  </data>
  <data name="CMD_Mark" xml:space="preserve">
    <value>标记 &lt;NAME&gt;</value>
  </data>
  <data name="CMD_MarkSymbol" xml:space="preserve">
    <value>标记符号...</value>
  </data>
  <data name="CMD_Paste" xml:space="preserve">
    <value>粘贴文本
右键：覆盖整行粘贴
Ctrl 单击：粘贴并选中下一项</value>
  </data>
  <data name="CMD_RenameSymbol" xml:space="preserve">
    <value>重命名符号</value>
  </data>
  <data name="CMD_ReorderParameters" xml:space="preserve">
    <value>重新排列参数</value>
  </data>
  <data name="CMD_Replace" xml:space="preserve">
    <value>替换...</value>
  </data>
  <data name="CMD_ReplaceInFiles" xml:space="preserve">
    <value>在文件中替换...</value>
  </data>
  <data name="CMD_SearchDeclaration" xml:space="preserve">
    <value>搜索成员声明</value>
  </data>
  <data name="CMD_SearchWith" xml:space="preserve">
    <value>联网搜索 &lt;NAME&gt;...</value>
  </data>
  <data name="CMD_SelectAll" xml:space="preserve">
    <value>选择所有</value>
  </data>
  <data name="CMD_SelectDirectiveRegion" xml:space="preserve">
    <value>选择指令区域</value>
  </data>
  <data name="CMD_ShowSyntaxClassificationInfo" xml:space="preserve">
    <value>显示语法归类信息</value>
  </data>
  <data name="CMD_SurroundWith" xml:space="preserve">
    <value>外侧代码...</value>
  </data>
  <data name="CMD_TagXmlDocB" xml:space="preserve">
    <value>以 &lt;b&gt; 包围</value>
  </data>
  <data name="CMD_TagXmlDocC" xml:space="preserve">
    <value>以 &lt;c&gt; 包围</value>
  </data>
  <data name="CMD_TagXmlDocI" xml:space="preserve">
    <value>以 &lt;i&gt; 包围</value>
  </data>
  <data name="CMD_TagXmlDocPara" xml:space="preserve">
    <value>以 &lt;para&gt; 包围</value>
  </data>
  <data name="CMD_TagXmlDocSee" xml:space="preserve">
    <value>以 &lt;see&gt; 或 &lt;paramref&gt; 包围</value>
  </data>
  <data name="CMD_TagXmlDocU" xml:space="preserve">
    <value>以 &lt;u&gt; 包围</value>
  </data>
  <data name="CMD_ToggleBookmark" xml:space="preserve">
    <value>切换书签标记</value>
  </data>
  <data name="CMD_ToggleBreakpoint" xml:space="preserve">
    <value>切换断点</value>
  </data>
  <data name="CMD_ToggleOperator" xml:space="preserve">
    <value>切换操作符</value>
  </data>
  <data name="CMD_ToggleParentheses" xml:space="preserve">
    <value>切换括号</value>
  </data>
  <data name="CMD_ToggleValue" xml:space="preserve">
    <value>切换值</value>
  </data>
  <data name="CMD_UncommentSelection" xml:space="preserve">
    <value>取消注释选定内容</value>
  </data>
  <data name="CMD_Unindent" xml:space="preserve">
    <value>减少行缩进</value>
  </data>
  <data name="CMD_Unmark" xml:space="preserve">
    <value>取消标记 &lt;NAME&gt;</value>
  </data>
  <data name="CMD_UnmarkSymbol" xml:space="preserve">
    <value>取消标记...</value>
  </data>
  <data name="CMD_Uppercase" xml:space="preserve">
    <value>转为大写</value>
  </data>
  <data name="CMDT_SelectAll" xml:space="preserve">
    <value>选中所有文本</value>
  </data>
  <data name="T_AsParameter" xml:space="preserve">
    <value> 作为参数</value>
  </data>
  <data name="T_Classes" xml:space="preserve">
    <value>类</value>
  </data>
  <data name="T_CurrentDocument" xml:space="preserve">
    <value>当前文档</value>
  </data>
  <data name="T_CurrentProject" xml:space="preserve">
    <value>当前项目</value>
  </data>
  <data name="T_DelegateEvent" xml:space="preserve">
    <value>委托、附加或移除事件</value>
  </data>
  <data name="T_Delegates" xml:space="preserve">
    <value>委托</value>
  </data>
  <data name="T_DerivedClasses" xml:space="preserve">
    <value> 派生类</value>
  </data>
  <data name="T_Enumerations" xml:space="preserve">
    <value>枚举类型</value>
  </data>
  <data name="T_Events" xml:space="preserve">
    <value>事件</value>
  </data>
  <data name="T_Extensions" xml:space="preserve">
    <value> 扩展方法</value>
  </data>
  <data name="T_FieldsProperties" xml:space="preserve">
    <value>字段和属性</value>
  </data>
  <data name="T_Implementations" xml:space="preserve">
    <value> 接口实现: </value>
  </data>
  <data name="T_Interfaces" xml:space="preserve">
    <value>接口</value>
  </data>
  <data name="T_InternalPrivateTypes" xml:space="preserve">
    <value>内部或私有类型</value>
  </data>
  <data name="T_LineOfCode" xml:space="preserve">
    <value>代码行数: </value>
  </data>
  <data name="T_Methods" xml:space="preserve">
    <value>方法</value>
  </data>
  <data name="T_NameAlike" xml:space="preserve">
    <value> 类似名称</value>
  </data>
  <data name="T_Namespaces" xml:space="preserve">
    <value>名称空间</value>
  </data>
  <data name="T_Overrides" xml:space="preserve">
    <value> 重载: </value>
  </data>
  <data name="T_Members" xml:space="preserve">
    <value> 成员数 {count} (继承 {inherited})</value>
  </data>
  <data name="T_Producers" xml:space="preserve">
    <value> 生成位置</value>
  </data>
  <data name="T_PublicProtectedTypes" xml:space="preserve">
    <value>公共或保护类型</value>
  </data>
  <data name="T_ReferencedSymbols" xml:space="preserve">
    <value> 引用的符号: </value>
  </data>
  <data name="T_Referrers" xml:space="preserve">
    <value> 引用方</value>
  </data>
  <data name="T_ResultFilter" xml:space="preserve">
    <value>筛选结果</value>
  </data>
  <data name="T_ResultFilterTip" xml:space="preserve">
    <value>筛选本菜单中的项，用空格隔开关键词。</value>
  </data>
  <data name="T_SignatureMatch" xml:space="preserve">
    <value> 签名匹配</value>
  </data>
  <data name="T_SourceLocations" xml:space="preserve">
    <value> 源代码位置: </value>
  </data>
  <data name="T_Structures" xml:space="preserve">
    <value>结构</value>
  </data>
  <data name="T_TypeConversion" xml:space="preserve">
    <value>类型转换</value>
  </data>
  <data name="T_TypeReferenceOrArgument" xml:space="preserve">
    <value>引用或参数类型</value>
  </data>
  <data name="T_TypesDelegates" xml:space="preserve">
    <value>类型和委托</value>
  </data>
  <data name="T_Write" xml:space="preserve">
    <value>写入</value>
  </data>
  <data name="CMD_GotoProjectReleasePage" xml:space="preserve">
    <value>转到发布 Codist 项目的网页</value>
  </data>
  <data name="CMD_GotoProjectWebSite" xml:space="preserve">
    <value>转到 Codist 项目的网站</value>
  </data>
  <data name="CMD_Load" xml:space="preserve">
    <value>加载...</value>
  </data>
  <data name="CMD_OpenDonatePage" xml:space="preserve">
    <value>打开浏览器并捐赠 Codist 项目</value>
  </data>
  <data name="CMD_PostIssue" xml:space="preserve">
    <value>发表建议或提交问题报告</value>
  </data>
  <data name="CMD_Save" xml:space="preserve">
    <value>保存...</value>
  </data>
  <data name="OT_About" xml:space="preserve">
    <value>关于 Codist</value>
  </data>
  <data name="OT_ConfigurationFile" xml:space="preserve">
    <value>配置文件</value>
  </data>
  <data name="OT_ConfigurationFileTip" xml:space="preserve">
    <value>使用以下按钮备份你的配置，配置文件可共享给其他伙伴</value>
  </data>
  <data name="OT_DonateLink" xml:space="preserve">
    <value>通过 PayPal 捐赠</value>
  </data>
  <data name="OT_FeatureControllers" xml:space="preserve">
    <value>特性控制</value>
  </data>
  <data name="OT_General" xml:space="preserve">
    <value>常规</value>
  </data>
  <data name="OT_LatestRelease" xml:space="preserve">
    <value>最近发布版本:</value>
  </data>
  <data name="OT_ProjectWebSite" xml:space="preserve">
    <value>项目网站:</value>
  </data>
  <data name="T_AnonymousType" xml:space="preserve">
    <value>匿名类型: </value>
  </data>
  <data name="T_Argument" xml:space="preserve">
    <value>方法参数</value>
  </data>
  <data name="T_ArgumentOf" xml:space="preserve">
    <value> </value>
  </data>
  <data name="T_ArgumentN" xml:space="preserve">
    <value>参数 &lt;N&gt;</value>
  </data>
  <data name="T_ArgumentNOf" xml:space="preserve">
    <value>参数 &lt;N&gt; </value>
  </data>
  <data name="T_Assembly" xml:space="preserve">
    <value>程序集: </value>
  </data>
  <data name="T_Attribute" xml:space="preserve">
    <value>特性:</value>
  </data>
  <data name="T_Chars" xml:space="preserve">
    <value>字符</value>
  </data>
  <data name="T_Color" xml:space="preserve">
    <value>颜色</value>
  </data>
  <data name="T_CapturedVariables" xml:space="preserve">
    <value>捕获的变量</value>
  </data>
  <data name="T_SuperQuickInfo" xml:space="preserve">
    <value>超级代码提示</value>
  </data>
  <data name="T_SmartBar" xml:space="preserve">
    <value>智能工具条</value>
  </data>
  <data name="T_ScrollbarMarkers" xml:space="preserve">
    <value>滚动条标记</value>
  </data>
  <data name="T_ReturnAnonymousFunction" xml:space="preserve">
    <value>返回匿名方法 </value>
  </data>
  <data name="T_ReturnFor" xml:space="preserve">
    <value> </value>
  </data>
  <data name="T_Return" xml:space="preserve">
    <value>返回 </value>
  </data>
  <data name="T_ReadVariable" xml:space="preserve">
    <value>读取变量: </value>
  </data>
  <data name="T_NavigationBar" xml:space="preserve">
    <value>导航栏</value>
  </data>
  <data name="T_SyntaxHighlight" xml:space="preserve">
    <value>高级语法样式</value>
  </data>
  <data name="T_EndOfRegion" xml:space="preserve">
    <value>#region 结束 </value>
  </data>
  <data name="T_EnumAllFlags" xml:space="preserve">
    <value>所有标识位: </value>
  </data>
  <data name="T_EnumFieldCount" xml:space="preserve">
    <value>字段数:</value>
  </data>
  <data name="T_EnumMax" xml:space="preserve">
    <value>最大值: </value>
  </data>
  <data name="T_EnumMin" xml:space="preserve">
    <value>最小值: </value>
  </data>
  <data name="T_EnumUnderlyingType" xml:space="preserve">
    <value>Enum 基础类型: </value>
  </data>
  <data name="T_HashCode" xml:space="preserve">
    <value>散列值</value>
  </data>
  <data name="T_Implements" xml:space="preserve">
    <value>实现接口:</value>
  </data>
  <data name="T_Interface" xml:space="preserve">
    <value>接口:</value>
  </data>
  <data name="T_LambdaExpression" xml:space="preserve">
    <value>lambda 表达式</value>
  </data>
  <data name="T_Lines" xml:space="preserve">
    <value> 行</value>
  </data>
  <data name="T_DocumentationFrom" xml:space="preserve">
    <value>借用文档: </value>
  </data>
  <data name="T_DelegateSignature" xml:space="preserve">
    <value>委托签名</value>
  </data>
  <data name="T_DeclaredVariable" xml:space="preserve">
    <value>声明的变量: </value>
  </data>
  <data name="T_ExplicitImplements" xml:space="preserve">
    <value>显式实现接口:</value>
  </data>
  <data name="T_Member" xml:space="preserve">
    <value>成员:</value>
  </data>
  <data name="T_MethodOverload" xml:space="preserve">
    <value>方法重载:</value>
  </data>
  <data name="T_Namespace" xml:space="preserve">
    <value>名称空间: </value>
  </data>
  <data name="T_SymbolUnavailableIn" xml:space="preserve">
    <value>符号在以下项目中不可用:</value>
  </data>
  <data name="T_Text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="T_Type" xml:space="preserve">
    <value>类型:</value>
  </data>
  <data name="T_TypeArgument" xml:space="preserve">
    <value>类型参数:</value>
  </data>
  <data name="T_MaybeArgument" xml:space="preserve">
    <value>可能是</value>
  </data>
  <data name="T_MaybeArgumentOf" xml:space="preserve">
    <value> 参数</value>
  </data>
  <data name="T_Maybe" xml:space="preserve">
    <value>可能是...</value>
  </data>
  <data name="T_AttributeOf" xml:space="preserve">
    <value>特性</value>
  </data>
  <data name="T_Inherited" xml:space="preserve">
    <value> (继承)</value>
  </data>
  <data name="T_BaseType" xml:space="preserve">
    <value>基类: </value>
  </data>
  <data name="T_Characters" xml:space="preserve">
    <value> 字符</value>
  </data>
  <data name="T_Class" xml:space="preserve">
    <value>类: </value>
  </data>
  <data name="T_Constraint" xml:space="preserve">
    <value>约束: </value>
  </data>
  <data name="T_DefinedIn" xml:space="preserve">
    <value>定义于 </value>
  </data>
  <data name="T_DefinedInType" xml:space="preserve">
    <value>定义于: </value>
  </data>
  <data name="T_EventSignature" xml:space="preserve">
    <value>事件签名 </value>
  </data>
  <data name="T_Exception" xml:space="preserve">
    <value>异常</value>
  </data>
  <data name="T_Locations" xml:space="preserve">
    <value>位置: </value>
  </data>
  <data name="T_MemberType" xml:space="preserve">
    <value>成员类型: </value>
  </data>
  <data name="T_SelectedCharacter" xml:space="preserve">
    <value>选中的字符:</value>
  </data>
  <data name="T_Selection" xml:space="preserve">
    <value>选中内容: </value>
  </data>
  <data name="T_Signature" xml:space="preserve">
    <value>签名: </value>
  </data>
  <data name="T_SourceFile" xml:space="preserve">
    <value>源文件: </value>
  </data>
  <data name="T_Spans" xml:space="preserve">
    <value> 段</value>
  </data>
  <data name="OT_ThankYou" xml:space="preserve">
    <value>感谢您使用 Codist</value>
  </data>
  <data name="OT_SupportCodst" xml:space="preserve">
    <value>支持 Codist 未来的开发:</value>
  </data>
  <data name="T_Example" xml:space="preserve">
    <value>示例</value>
  </data>
  <data name="T_SeeAlso" xml:space="preserve">
    <value>参见</value>
  </data>
  <data name="T_Returns" xml:space="preserve">
    <value>返回值</value>
  </data>
  <data name="T_Remarks" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="CMD_SearchTitles" xml:space="preserve">
    <value>搜索标题</value>
  </data>
</root>