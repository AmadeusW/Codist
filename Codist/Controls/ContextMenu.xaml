<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:c="clr-namespace:Codist.Controls;assembly=Codist">
	<!-- Separator -->
	<Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Margin" Value="0,4,0,4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderThickness="1" BorderBrush="{DynamicResource VsBrush.CommandBarMenuSeparator}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Outer menu items-->
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Background" Value="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}"/>
		<Setter Property="Foreground" Value="{DynamicResource VsBrush.CommandBarTextInactive}"/>
		<Style.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseOverBackgroundGradient}"></Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="LightGray"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- Outer menu -->
	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<!--Here is where you change the border thickness to zero on the menu-->
					<Border BorderThickness="1,1,1,1" x:Name="Border" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBorder}" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}">
						<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="3"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Background="{TemplateBinding Panel.Background}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Width="16" Height="16" Margin="3,3,8,3" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border Name="Check" Width="16" Height="16" Visibility="Collapsed" Margin="6,0,6,0" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderThickness="1" BorderBrush="#5082a4">
					<Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="#5082a4" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0"/>
				</Border>
				<ContentPresenter Name="HeaderHost" MaxWidth="500" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" Height="{Binding ElementName=HeaderHost,Path=ActualHeight}" VerticalAlignment="Center" DockPanel.Dock="Right" Foreground="{DynamicResource VsBrush.GrayText}"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseOverBackgroundGradient}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- SubmenuHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type c:ThemedMenuItem}">
		<Border Name="Border" Background="{TemplateBinding Panel.Background}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Width="16" Height="16" Margin="3,3,8,3" VerticalAlignment="Center" ContentSource="Icon"/>
				<ContentPresenter Name="HeaderHost" MaxWidth="500" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Height="{Binding ElementName=HeaderHost,Path=ActualHeight}" Text="{TemplateBinding InputGestureText}" TextTrimming="CharacterEllipsis" Margin="5,2,0,2" DockPanel.Dock="Right"/>
				<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource VsBrush.CommandBarMenuSubmenuGlyph}"/>
				<Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
					<Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBorder}" BorderThickness="1,1,1,1">
						<StackPanel Margin="3">
							<ContentPresenter x:Name="PopupHeader" Content="{TemplateBinding SubMenuHeader}" ContentSource="Tag" Margin="0,0,0,3" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
							<ScrollViewer Name="SubMenuScrollViewer" MaxHeight="{TemplateBinding SubMenuMaxHeight}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
								<ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
							</ScrollViewer>
						</StackPanel>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseOverBackgroundGradient}"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>
